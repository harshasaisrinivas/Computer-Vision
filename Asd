gst-launch-1.0 rpicamsrc ! video/x-raw, width=640, height=480, framerate=30/1 ! queue ! videoconvert ! queue ! autovideosink

gst-launch-1.0 rpicamsrc ! video/x-raw, width=320, height=240, framerate=15/1 ! queue ! videoconvert ! queue ! autovideosink

gst-launch-1.0 rpicamsrc ! video/x-raw, width=640, height=480, framerate=30/1 ! queue ! videoconvert ! fpsdisplaysink text-overlay=false video-sink=autovideosink

gst-launch-1.0 rpicamsrc ! video/x-raw, width=640, height=480, framerate=30/1 ! queue max-size-buffers=2 leaky=2 ! videoconvert ! queue max-size-buffers=2 leaky=2 ! autovideosink

import cv2

# Define the GStreamer pipeline
pipeline = (
    "rpicamsrc ! "
    "video/x-raw, width=320, height=240, framerate=15/1 ! "
    "videoconvert ! "
    "appsink"
)

# Open the video capture with the GStreamer pipeline
cap = cv2.VideoCapture(pipeline, cv2.CAP_GSTREAMER)

if not cap.isOpened():
    print("Error: Could not open camera.")
else:
    while True:
        ret, frame = cap.read()
        if not ret:
            print("Error: Could not read frame.")
            break
        cv2.imshow('frame', frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

cap.release()
cv2.destroyAllWindows()
